name: Release

on:
  push:
    branches:
      - main

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 
      
      - uses: actions/setup-node@v4
        with:
            node-version: '20'
            cache: 'npm'

      - name: Cache dependencies
        id: cache
        uses: actions/cache@v4
        with:
            path: |
                ./node_modules
                /home/runner/.cache/Cypress
            key: modules-${{ hashFiles('package-lock.json') }}

      - name: Install dependencies
        run: npm ci

      - name: Run semantic-release
        run: npm run version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Get Tag and Commit Info
        id: tag_info
        run: |
          tag=$(git describe --tags `git rev-list --tags --max-count=1`)
          commit_hash=$(git rev-list -n 1 $tag)
          commit_message=$(git log -1 --pretty=%B $commit_hash)

          # Handle multi-line output properly using the heredoc syntax for GITHUB_OUTPUT
          echo "tag=$tag" >> $GITHUB_OUTPUT
          echo "commit_hash=$commit_hash" >> $GITHUB_OUTPUT
          echo "commit_message<<EOF" >> $GITHUB_OUTPUT
          echo "$commit_message" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
      
      - name: Download shared artifact
        uses: actions/download-artifact@v4
        with:
          name: shared-data
          github-token: ${{ secrets.GITHUB_TOKEN }} # token with actions:read permissions on target repo
          repository: clintonmedbery/github-actions-test
      
      - name: Save Tag To Artifact
        run: |
          if [ ! -s data.txt ]; then
            echo "File is empty. Writing new data..."
            echo "tag=${{ steps.tag_info.outputs.tag }}" > $tag.txt
          else
            echo "File is not empty. No changes made."
          fi
      
      - name: Display the file contents
        run: cat data.txt
      
      - name: Re-upload the artifact (overwriting the old one)
        uses: actions/upload-artifact@v4
        with:
          name: shared-data
          path: data.txt

      - name: Send Slack Notification
        run: |
          payload=$(jq -n --arg tag "${{ steps.tag_info.outputs.tag }}" \
                          --arg commit_hash "${{ steps.tag_info.outputs.commit_hash }}" \
                          --arg commit_message "${{ steps.tag_info.outputs.commit_message }}" \
                          --arg repo "${{ github.repository }}" \
                          '{
                            "text": "ðŸŽ‰ A new tag has been created in *\($repo)*:\n*Tag:* `\($tag)`\n*Commit Hash:* `\($commit_hash)`\n*Commit Message:* \($commit_message)"
                          }')

          curl -X POST -H 'Content-type: application/json' --data "$payload" $SLACK_WEBHOOK_URL
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}